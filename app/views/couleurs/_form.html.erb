<div class="panel-body">
  <%= form_for @couleur, :html => {:class => 'form-horizontal'} do |f| %>
      <% if @couleur.errors.any? %>
          <div id="error_explanation">
            <h2><%= pluralize(@couleur.errors.count, "error") %> prohibited this color from being saved:</h2>

            <ul>
              <% @couleur.errors.full_messages.each do |message| %>
                  <li>
                    <%= message %>
                  </li>
              <% end %>
            </ul>
          </div>
      <% end %>

      <div class="form-group">
        <%= f.label :title, :class => 'control-label' %>
        <div class="controls">
          <%= f.text_field :title, :class => 'form-control' %>
        </div>
      </div>
      <br>
      <label style="font-size: 13px">Type a color. Or click on the left square</label>

      <div class="form-group">
        <%= f.label 'Color', :class => 'control-label' %>
        <div class="controls">
          <%= f.text_field :value_coul, :class => 'form-control', :id => 'minicolor', :data_defaultValue => "#{CouleursHelper.value_coul_to_minicolor(@couleur.value_coul)}" %>
          <br>
          <br>
          <a class="btn btn-success" data-toggle="modal" href="#myModal">
            Set of colors for this app
          </a>
        </div>
      </div>
      <div id="Inline"></div>
      </div>


      <div class="form-group">
        <div class="btn btn-warning btn-xs">
          <label class="btn btn-warning btn-sm" data-toogle="buttons">
            <%= f.check_box :edit_flag %>Press Here if someone needs to edit this key<br>
          </label>

          <div id="Inline"></div>
        </div>
      </div>

      <% if (params[:app_id]!=nil)
           app_id = params[:app_id]
         else
           app_id = @couleur.app_id
         end %>
      <%= f.hidden_field :app_id, :value => "#{app_id}" %>
      <div class="form-actions">
        <%= f.submit nil, :class => 'btn btn-primary' %>
        <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
                    couleurs_path(:app_id => app_id), :class => 'btn' %>
      </div>
  <% end %>
  </div>

  <div class="modal fade" id="myModal" tabindex="1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
          <h4 class="modal-title">Modal Tittle</h4>
        </div>
        <div class="modal-body">
          <% data = ThemeColor.where("app_id = '#{@couleur.app_id}'") %>
          <% for i in 0..data.length-1
               puts data[i].name.to_s %>
              <% if (data[i].name.blank? == true)
                   color_name = "No Name"
                 else
                   color_name = data[i].name
                 end %>
              <button type="button" class="btn btn-lg btn-modal" onclick="setColorTheme('<%= "#{data[i].color.gsub(/0x/, "#")}"%>')" style="background-color: <%= "#{data[i].color.gsub(/0x/, "#")}" %>">
                <%= "#{color_name}" %>
              </button>
              <% if (i+1%4 == 0) %>
                  <br/>
              <% end %>
              &nbsp;
          <% end %>
        </div>
        <div class="modal-footer">
          <button data-dismiss="modal" class="btn btn-default" type="button">Close</button>
          <button class="btn btn-success" type="button">Save changes</button>
        </div>
      </div>
    </div>
  </div>